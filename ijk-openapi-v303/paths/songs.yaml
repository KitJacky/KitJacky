paths:
  /upload:
    post:
      summary: Upload an audio file
      tags:
        - Songs
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadRequest'
            encoding:
              audio:
                contentType: audio/mpeg
              cover:
                contentType: image/jpeg
            examples:
              default:
                value:
                  title: demo
      responses:
        "200":
          description: Uploaded file info
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /songs:
    get:
      summary: List uploaded songs
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: album
          schema:
            type: string
        - in: query
          name: tags
          schema:
            type: string
        - in: query
          name: artist
          schema:
            type: string
      responses:
        "200":
          description: Song list
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /user/songs:
    get:
      summary: List songs uploaded by the authenticated artist
      tags:
        - Songs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Song list
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/user/songs/{id}":
    put:
      summary: Update your own song metadata
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongUpdateRequest'
      responses:
        "200":
          description: Update result
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete one of your songs
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Deletion result
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/artists/{id}/songs":
    get:
      summary: List songs for a specific artist
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Song list
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/songs/{id}":
    get:
      summary: Get song details including metadata and lyrics
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Song info
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/songs/{id}/visibility":
    put:
      summary: Change a song's visibility
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongVisibilityRequest'
      responses:
        "200":
          description: Visibility updated
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/songs/{id}/title":
    put:
      summary: Update a song's title
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongTitleRequest'
      responses:
        "200":
          description: Title updated
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'

  "/songs/{id}/cover":
    put:
      summary: Update a song's cover image
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SongCoverUpdateRequest'
      responses:
        "200":
          description: Updated cover info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongCoverResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/songs/{id}/metadata":
    put:
      summary: Update ID3 metadata fields of a song
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongMetadataRequest'
      responses:
        "200":
          description: Metadata updated
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'

  "/download/{id}":
    get:
      summary: Download a song's audio file
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Audio file
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'

  "/play/{id}":
    get:
      summary: Stream a song's audio file
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Audio stream
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/share-links/{songId}":
    post:
      summary: Generate a temporary share link for a song
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareLinkCreateRequest'
      responses:
        "200":
          description: Share link
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    get:
      summary: Get active share links for a song
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: songId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of active share links
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    token:
                      type: string
                    url:
                      type: string
                    expires_at:
                      type: integer
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/share-links/albums/{albumId}":
    post:
      summary: Generate a temporary share link for an album
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: albumId
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareLinkCreateRequest'
      responses:
        "200":
          description: Share link
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    get:
      summary: Get active share links for an album
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: albumId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of active share links
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    token:
                      type: string
                    url:
                      type: string
                    expires_at:
                      type: integer
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/share-links/info/{token}":
    get:
      summary: Get info for a share link
      tags:
        - Songs
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Share link details
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /share-links:
    get:
      summary: List all active share links for the current user
      tags:
        - Songs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Active share links
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/share-links/{token}/logs":
    get:
      summary: List share link access logs
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
      responses:
        "200":
          description: Log entries
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/share-links/{token}/analytics":
    get:
      summary: Get analytics for a share link
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Analytics data
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  "/share-links/{token}":
    delete:
      summary: Delete a share link
      tags:
        - Songs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Share link deleted successfully
        "404":
          description: Token not found
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/ServerError'
  "/shared/{token}":
    get:
      summary: Access audio or metadata using a share token
      tags:
        - Songs
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: song
          schema:
            type: integer
          description: Stream a specific track from an album share
        - in: query
          name: details
          schema:
            type: integer
          description: Return song or album metadata when set to 1
      responses:
        "200":
          description: Audio data or metadata
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
